%!PS-Adobe-2.0 EPSF-1.2%%Title: HY__LO01_matemF____V8___PMS.fh8%%Creator: FreeHand 8.0.1%%CreationDate: 12/13/09 9:55 PM%%BoundingBox: 0 0 270 256%%FHPathName:Unix:    LOGODOMAIN:HY uusi-ilme:PMS:FH8:HY__LO01_matemF____V8___PMS.fh8%ALDOriginalFile:Unix:    LOGODOMAIN:HY uusi-ilme:PMS:FH8:HY__LO01_matemF____V8___PMS.fh8%ALDBoundingBox: 0 0 269 255%%FHPageNum:1%%DocumentSuppliedResources: procset Altsys_header 4 0%%ColorUsage: Color%%DocumentCustomColors: (PANTONE 137 C)%%CMYKCustomColor: 0 0.35 0.9 0 (PANTONE 137 C)%%EndComments%%BeginAGDEmbeddedDoc: version 1.0%:s8W,W5t==!^::f!!!!oW!!3-(<,$2\ErZ1?!!*'"!!!!!30STV%:!!!Sg!!*'%!"3=KF(96)E-,f4D?Bk="9SW2GA1qkEbTE5AT@bN#QOp^+#,c93%bFi+?]]`/i<he!!!0&!<<^*@<6NYDdug^ATpLQGQS(7!!*'#0`_7X!"cgE;e'6PAHDi7KF\&D1bm#S2`Jn[0eb==blB^[?iW's!!!!%!"DY2@omA^A8cZj+96,%;?[7)$ii0c0E>nhDuaSXJ,h2%1H>Fh!+]:6!rrXHE+DlQ!b67^AQoWJ;=O[B%:!"&^+!,_dF4TT9thuIm"Er^:^AN9`J&NL8%An?!P!%;u-@fQK2!!WEs2Z\#+!HJ/A#!`.lE+*]j&NKgrE/G80!!HnJCd9Id!WW9%#'4m,DehZG"u?;b!WWq68,rW'&c_nH"T\T&!WW6.!!*'[%SgSZ&\(>RBg3M4@:qt31C4.<!!*(R"W.4YTHadD)$0d>!!*'!!#GV8)#t42&MjGA!!ZX-!&4Zt,R6hWU&Y05/-eomK)a^c29B26%:!&O]c,/#i6495?\68\a1OTYad*)$D6!ZY&;!!4-[!#@QqHj:bp.Y%L!*/"PV#6"T(*/OY6587`F!AOQS!!--r#Qk'0'5(lt!<<Hc!X\o-"U,nH)upTO!"h:!%fd(>%5A1t3<9:u#lk52#<rY$3tDEJ'GCHH#X8>+4W8H.okcT76ZmHlDf&5]:*<I>"TSfc.MLnFe.GA(0`hG9!CB!p@/sd;CB+>:!$h[I7md;9#64`)3tjCMc)stj%:$ihRV!!D$s!&kSn!._RR(et'L!-/'V1F6ir#rNh*!%.a\)?Kmc!%/ikBd"l)!$_If!$M=b%KHd_LBdfZ#QQXa"TUmp"Te](s6?Wc!/1E,!8SXq!,)@_4!-]hK`HW)!!+RL!W[oSK`D*W!^H8Us(_[i!(?kf!,_pI!W`:\!$;:C,7c+jZ2t#@_J_CC6Ok@8!!#FfZ!Co@!!):D!<E0h!)!@pkN])Is1(l+!,=InCBA8],PPaL+k2GU%:?4[,;pqfZ69*.N^'*J;$,qAsF>9/8@#QPD9_'L3R[/`QY-#PS5AN_Mb3<4(a+CulO2'sk#-3mT&$hFL#5>6;d9EP8@;(P3k<&ITk3<;#m!)Nq=3DT`5!!3WB!&=NS%XUVS,QLX@(^'gn1Hl`X0`V7W+TO.q!#7o/irT2^(&7k1('F^>(/7@#!#@LK)4:O/!!!c[!!,S*(,Q!kk%6aV49-'r!6iYE!)-;s!#AOV!+Z03(.1(^rkOM@%:!#AH>FEIV;!rs*q!WW9;OT7's".TDm![:&KYlFb*(:cd=(;W4B!#F(,"5EtY6pMMt$31k.!WW9;nGiOj(F]>@!._I3@T6o`FAm:,@VQ*+"%c]M1M&EV!!%#=$8DWM9E>,A!&lWF$NL;a9M@N5Gqg%Sd1nf-5]I#`:/CpV58[?":GVu><<4m;"/$N)*<7lc3rf5WAf7'<3ElLas8N'!NUr2R!*Pb%'*&"o4UFnL9cl_j7hua<D"I("%:4VS;)";E*]4TIkM!"Ju/s8N-#"%,fi#QOihf;/_POdl\9M'3,-nR2\'!&pl##J?1-!!3H4)9F$,`W-"D@0e/N+U>b:@0dQ;V$G-C!(`a_!!roC/>EI%KHCI4$igF*#LRsk#ReJB#M/L@1BRm]!!$i1#N=.+#QhW5#M.cU#Q"Q&#pBQ=EIp^^nJNJU"OVf+qu?k=Ta1A&?O,`8+UAV+1`H`+!'nhP!XKF3HjA@Z!Y]RD#McimZ!^/o%:!$MUS(10E2be4/bqR#&`f,7$X+]SNV;1M(88-,P=Jd;bu*s]A%!(d/j!2*JI70#OY#FTPk#RJcW!!!7o(k`/%OWXn*6N[T!;8%J[6NaC2!!i/MIg;ngKEqIK@K?H6Y.4N;mGV"M];Yc8kHTUD!!9M&!!hc9Jd8kUKa6c$3c,0'#R@Z8!!hWMTEhpt!`]6"=+n?i70$'cS1FUEnZm`OU=fMOl8&MC!1$:>#PZ!j8-+C[?O-OW+:sOu%:49lIKO1o"%!.S.j70$*iH,jD"qTf-A!!dj/6O3M-r<Ihu?jHM^^jng?",OHs#OgX.#=SXd6Q];.l>8cd>t>!E^#TFcO*h1aY@%V!<WI[*#C&A+#P2;*#%srF#PZ2%#f$[aJjiZ>@nZhj!(dB#&gR_SOT5C]#@?eL#PMQ^#A9#]#P21c!.IZGF?cK)h4PkqD8Lf.m%FDEh?S8h+U?OF?UFpQ6=0uArr<WS#CR_F#L+Q&#EUqMpSqIW%:bj:og!rr=l[!r>'r*9Pp\DIP;`*`fN!2=7\#KCn[8-,IaJHrfqTa(PuT[j,K^kQ2$V6p@0[Ak3A"9:]q<<<E1q&K^@2#sq?i!6AA#QOo2W`E7,O8!,h[^_t8QXo%T#R@Nu>mHJ],R:(u@SR'?mfWUj#FXcr#G>4P#Ec'Z#K/iX&-)s)<`oXL('+Z*-D:[c$31;2&=S@p#L)92#E?YD6Nc#l,6n2KND^l(du0t+N/F54kVXRifq$AS%:+97H@<!`:%,6rg!*s_;K*s[`)-oE%NqU-VoP-#oq"6VBlT]';Z!=/':,R9i2*=(NF+U=i0=WmbFhut>1X]-AIi#<dDWQlXl!<D3r,6t-'TL/hPM]`8#*[(ag!pd!2#Gi/C#QAE\#GQ6+!sh0m$TJ-R`h<YB1_lW-@0d:P+U8\]Wki+:&GIk;[UG[2q:QnrY0d6B@0caV+U><(=>pL@1U3'N#QXpefq\kX)'&to0K??m6N[T;;d_r4%:[iteQ#HRhI#T?Pc#Iph,#V.>[!uN.(@0!3Y+[?;9!'^HO!!!H.!<<(l#6Fl-2b!cR#MBk:#K"h1K`Hf,5meYT_pa*;!JLMr!/L[.&tB1l!JLM2!([,c"S2aU!*05V!&X`V$9_'s;?6b_!'Ukm"98E4$u]rm9OW3XE_^%[;Q_kd6^>bf&HtK$3=5aR!)!:l$ig;-s"RLX4]inU"op4V$j6Q!?NLK5:BCOs:Sfo[2[fs95N@*_dtF*W%::CMpW70%fG8,uEoK`FOAL]KHK+]nc!!<3`j!(A&+"?6Bf"GHh5!$Mdb"9:qh$3q^]!s`=#j!:?a"bcqF!-SW=!(I6J!(?mD!I/5t=94*UhdA;AE=)q1!+#e^!&Xa:)?V\o!<<-#8,u-V'iuUd!+coH!,X%_4i6:u8cVZf!"WEE8H8bY?gfEg)up!>"?"ar"#2#"rrN0$D^dHa:<?,NK`K$.70#:V#ZQq[8-">DK`H>u#Yb:A'N_/&%:5QQQ=s'nIt6Ou?`8,uBfK`FOA57R`L!!*'#!)6f:$NTj0@13/:K+ACk:GLr20q//-$V$s"!!/\p8I^2)%0-J1!!fuJ9<Dte!X&M%o`.Ve&.A[A%TkDRA8--QDes>dp`gRV;ZKh:;@3D'!WWC2"&V!44U#1H7f[ZjSRaO4db@9_#67g/!<<'#!!*'"_$a?V!!"5L&m>>:4eIB+1Bgn]<WEL-!&GX^&.nmB,6\];]Dqpr$o8&l2Qu0'%:n2^OL1CcVPFXdDE!+#Y0>8ISG6*3XAfO_i52\/=V!ru^/9MB[Q6%'LR3<T>-!4>&l!0@9_5t=^,"(='qB/]np!+Q!.J7IjF4\JK]!!!4u"%N>aX8i5f"'I\eCcg]r0)bip2&Bd(s#UBo!sD0s3rf6\7fYgT!!#fg9c!g1@/r_#DEkWf?8hsun)"6cJ%f\"5)K=B=TVM)<r`4#2#m\>0gbqd3<O.`!b_Z*!R%-%`b']%!^-Rl3U*u^%:%8-[U!"&]058(*q!s!%B#%K^s#64o4!':5_!'g<caCbPR/*7"*eGjXk!%$6!BF"Y>+po7j!,W*Ym/T3+N;rtZ!?gnq#R:@*ifXWRf+cb9!<E0"K`GZa!WZ5#!'1Dd+7fJ4<J:Ea!'VAh$9TY=$AAI;!!*)"WWN6T!;s<[!)it^.tmtW!!<4$<EK8%K`Hf,!%/'QN;sgr!,N__#69qu"g\^V!!*'!WiH+U%tt";!!*(#0BrB7afY@(%:!/1E,!!"b]WiJi%9*0eI70"50!&[LT!<<(o*s)ED4ZEQ"*&i=;$NL,U3"8=lK`GZa!W[EC+9V[u!/1CQ6N^j..PM?#%V5VX!!"AP$q]MG"T\Si=<;AcN;s"[LBiM5K`EJ+,s@V!!0Ij"[if<B!'(42hs*36K`D/SBE9;<+93N=!0$sY!!5\_!!%]QK`D)Qs8OkV>p=t&K`D)Q2uj![K`Hf,C'm<17gaqM70!;f5QUBT!<@fR]Vft-%:K`E1s!"&]4R9V3AE<'qXDZEi[.m7Wa4(i=/!)4M#!!!!:!!#f=9-HS$!-^X-70,[S5l_)h!'pTN!!!!f)aaWl!'pTN!'pVZs$[#U!&"?[@g*,<!)3M\!&d:H!)G7@!'pTn!_35V!4hA\!!"`i5lde`!!#:f8HqZe5l^mLVZ8^e$GfRo!!<4K!.+]l2fEpsG'5g(F9$AB2H<T_3KRf.D.u'3FBa*60op6-&H`#^"9=47?_dZ*YA+(8%:s8N'!Ba"_A8V1"DBJBU21OK27fJ,L="91)u9aC`o"%N>W!&4H\57:&B!!+8DVuVAK,liDp3skt>0`c\a#\j?HUL?6@3'#)0!$;1@KPV2$!)3WL!$2,K#mR:E!!*&u#66HZ?TkA3%0-H?1($#C"9<3K0ej5J(G,Ue&c_o?*<6*k!!#:b4;nb2SUuA]"ooeIAH2c2s$g^=AH;d>@VfTU,9m0g#QOm";fm%o."H2J4VIhs@fQKB-f%E,%:0`a[V@rq]L;ZRd:!C/mM!#.Ts9PJQ3('&D^0`_7W2ujZn#Yg<463%$eI0)S61^*n"!+5d@>llnj*<6+0847B+87c4?AI+ZD!-<2]5]^FF$"e!i"(hXV6UPpf@Q"Mn1D*?#:L\'M2$c#A+or`jYVn$>!'gN_F#=.WO!=ZL;fHYeZ8OZGB#"C(!AtAg*^smVD.RU,!'i#-F()q,![BN9!A+='7KHQs1CX@;!A.K`!$P`8F$6c/!u+!Y%:0**XY#&HI-<4;l^!A?e?#]FR!Df]W7APcfWBE/#51'%CU01U&$F`7=T"#U*17VQLXEao5`3!V,E2utm9!cJ8C!HTk\"(hN6!/*?53'hS*Dg,IfAog=,49@bK%fdYEBl6EE49IVQ0E=B>*^X[]@r"C2!!ki%Ao)9F!^Zo/:i^JaARrS,9EmW[6NKM?@<6-m3ui'b$Ueq76Nrj>?NXnP2AS:S;?.@j")ppt)_*-[4ocQ(;ZTcc7<Z*5%:&<[&J!E9(t;fm;$AUskI5S,4s!EB.O7s/NVATL'BF)rW-"CM7B@q0R@*WSN-=W%2>!EfFE<&u"-@P@dH,WPmH1^mmp!EGg>3>FG"69tuH7mogb0Gu/;,6@ju66lOG!G#aA5<nug1*pc;5lj7O2ZXXX!)inu0dmb;;`tptZiO5.;EuQj!>ITrA-!nU6igg!<':7sUH(:LB`M[&#t$KLAMF0c1BLMV*&djh!a98)2$,a'!*9;%(7D87%:2',ZsI/l&(1,/bg!#2I$1B90d!$X?(;`5h14TI2B1B9$`!D`\g"=*Z656O7P5la1N,;BBu#=/>U!'*1B5QO+N5QCle5QO+N5QO+N5QO+N5ViF0#_E%B!#u#*!?D4@lRX*T%:~>%%EndAGDEmbeddedDoc%%BeginResource: procset Altsys_header 4 0userdict begin /AltsysDict 300 dict def endAltsysDict begin/bdf{bind def}bind def/xdf{exch def}bdf/defed{where{pop true}{false}ifelse}bdf/ndf{1 index where{pop pop pop}{dup xcheck{bind}if def}ifelse}bdf/d{setdash}bdf/h{closepath}bdf/H{}bdf/J{setlinecap}bdf/j{setlinejoin}bdf/M{setmiterlimit}bdf/n{newpath}bdf/N{newpath}bdf/q{gsave}bdf/Q{grestore}bdf/w{setlinewidth}bdf/Xic{matrix invertmatrix concat}bdf/Xq{matrix currentmatrix mark}bdf/XQ{cleartomark setmatrix}bdf/sepdef{ dup where not {AltsysSepDict } if  3 1 roll exch put}bdf/st{settransfer}bdf/colorimage defed /_rci xdf/cntr 0 def/readbinarystring{ /cntr 0 def 2 copy readstring {{dup(\034) search{length exch pop exchdup length 0 ne{dup dup 0 get 32 sub 0 exch put /cntr cntr 1 add def}{pop 1 string dup0 6 index read pop 32 sub put}ifelse3 copyputinterval pop1 add1 index length 1 sub1 index sub dup 0 le {pop pop exit}ifgetinterval}{pop exit} ifelse} loop }if cntr 0 gt {pop 2 copydup length cntr sub cntr getintervalreadbinarystring } if pop exch pop} bdf/_NXLevel2 defed {  _NXLevel2 not {   /colorimage where {userdict eq {/_rci false def } if} if } if} if/md defed{  md type /dicttype eq {  /colorimage where { md eq { /_rci false def }if}if/settransfer where {md eq {/st systemdict /settransfer get def}if}if }if }if/setstrokeadjust defed{ true setstrokeadjust /C{curveto}bdf /L{lineto}bdf /m{moveto}bdf}{ /dr{transform .25 sub round .25 add exch .25 sub round .25 add exch itransform}bdf /C{dr curveto}bdf /L{dr lineto}bdf /m{dr moveto}bdf /setstrokeadjust{pop}bdf }ifelse/privrectpath {  4 -2 roll m dtransform round exch round exch idtransform  2 copy 0 lt exch 0 lt xor {dup 0 exch rlineto exch 0 rlineto neg 0 exch rlineto} {exch dup 0 rlineto exch 0 exch rlineto neg 0 rlineto} ifelse closepath}bdf/rectclip{newpath privrectpath clip newpath}def/rectfill{gsave newpath privrectpath fill grestore}def/rectstroke{gsave newpath privrectpath stroke grestore}def/_fonthacksave false def/currentpacking defed { /_bfh {/_fonthacksave currentpacking def false setpacking} bdf /_efh {_fonthacksave setpacking} bdf}{ /_bfh {} bdf /_efh {} bdf}ifelse/packedarray{array astore readonly}ndf/` {  false setoverprint     /-save0- save def 5 index concat pop storerect left bottom width height rectclip pop  /MMdict_count countdictstack def /MMop_count count 1 sub def userdict begin  /showpage {} def  0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin 10 setmiterlimit [] 0 setdash newpath } bdf/currentpacking defed{true setpacking}if/min{2 copy gt{exch}if pop}bdf/max{2 copy lt{exch}if pop}bdf/xformfont { currentfont exch makefont setfont } bdf/fhnumcolors 1  statusdict begin/processcolors defed {pop processcolors}{/deviceinfo defed {deviceinfo /Colors known {pop deviceinfo /Colors get} if} if} ifelse end def/printerRes  gsave matrix defaultmatrix setmatrix 72 72 dtransform abs exch abs max grestore def/graycalcs[ {Angle Frequency}    {GrayAngle GrayFrequency}  {0 Width Height matrix defaultmatrix idtransform dup mul exch dup mul add sqrt 72 exch div}  {0 GrayWidth GrayHeight matrix defaultmatrix idtransform dup mul exch dup mul add sqrt 72 exch div} ] def/calcgraysteps { forcemaxsteps {maxsteps } {/currenthalftone defed{currenthalftone /dicttype eq}{false}ifelse{currenthalftone beginHalftoneType 4 le{graycalcs HalftoneType 1 sub get exec}{HalftoneType 5 eq{Default begin{graycalcs HalftoneType 1 sub get exec}end}{0 60} ifelse}ifelseend}{currentscreen pop exch }ifelse printerRes 300 max exch div exch 2 copy sin mul round dup mul 3 1 roll cos mul round dup mul add 1 add dup maxsteps gt {pop maxsteps} if dup minsteps lt {pop minsteps} if  } ifelse} bdf/nextrelease defed {  /languagelevel defed not {    /framebuffer defed { 0 40 string framebuffer 9 1 roll 8 {pop} repeatdup 516 eq exch 520 eq or{/fhnumcolors 3 def/currentscreen {60 0 {pop pop 1}}bdf/calcgraysteps {maxsteps} bdf}if}if }if}iffhnumcolors 1 ne { /calcgraysteps {maxsteps} bdf} if/currentpagedevice defed {   currentpagedevice /PreRenderingEnhance known {currentpagedevice /PreRenderingEnhance get{/calcgraysteps {forcemaxsteps {maxsteps}{256 maxsteps min}ifelse} def} if } if} if/gradfrequency 144 defprinterRes 1000 lt { /gradfrequency 72 def} if/adjnumsteps {  dup dtransform abs exch abs max    printerRes div         gradfrequency mul       round         5 max        min        }bdf/goodsep { spots exch get 4 get dup sepname eq exch (_vc_Registration) eq or}bdf/BeginGradation defed{/bb{BeginGradation}bdf}{/bb{}bdf}ifelse/EndGradation defed{/eb{EndGradation}bdf}{/eb{}bdf}ifelse/bottom -0 def /delta -0 def /frac -0 def /height -0 def /left -0 def /numsteps1 -0 def /radius -0 def /right -0 def /top -0 def /width -0 def /xt -0 def /yt -0 def /df currentflat def /tempstr 1 string def /clipflatness currentflat def /inverted?  0 currenttransfer exec .5 ge def/tc1 [0 0 0 1] def /tc2 [0 0 0 1] def /storerect{/top xdf /right xdf /bottom xdf /left xdf /width right left sub def /height top bottom sub def}bdf/concatprocs{ systemdict /packedarray known  {dup type /packedarraytype eq 2 index type /packedarraytype eq or}{false}ifelse { /proc2 exch cvlit def /proc1 exch cvlit defproc1 aload pop proc2 aload popproc1 length proc2 length add packedarray cvx } { /proc2 exch cvlit def /proc1 exch cvlit def/newproc proc1 length proc2 length add array defnewproc 0 proc1 putinterval newproc proc1 length proc2 putintervalnewproc cvx }ifelse}bdf/i{dup 0 eq {pop df dup}  {dup} ifelse  /clipflatness xdf setflat}bdfversion cvr 38.0 le{/setrgbcolor{currenttransfer exec 3 1 rollcurrenttransfer exec 3 1 rollcurrenttransfer exec 3 1 rollsetrgbcolor}bdf}if/vms {/vmsv save def} bdf/vmr {vmsv restore} bdf/vmrs{vmsv restore /vmsv save def}bdf/eomode{  {/filler /eofill load def /clipper /eoclip load def} {/filler /fill load def /clipper /clip load def} ifelse}bdf/normtaper{}bdf/logtaper{9 mul 1 add log}bdf/CD{ /NF exch def  {    exch dup /FID ne 1 index/UniqueID ne and{exch NF 3 1 roll put}{pop pop}ifelse }forall  NF}bdf/MN{ 1 index length    /Len exch def  dup length Len add   string dup     Len      4 -1 roll     putinterval    dup      0       4 -1 roll    putinterval   }bdf/RC{4 -1 roll /ourvec xdf 256 string cvs(|______)anchorsearch {1 index MN cvn/NewN exch def cvn findfont dup maxlength dict CD dup/FontName NewN put dup /Encoding ourvec put NewN exch definefont pop}{pop}ifelse}bdf/RF{  dup       FontDirectory exch    known      {pop 3 -1 roll pop}   {RC} ifelse}bdf/FF{dup 256 string cvs(|______)exch MN cvn dup FontDirectory exch known {exch pop findfont 3 -1 roll pop} {pop dup findfont dup maxlength dict CD dup dup /Encoding exch /Encoding get 256 array copy 7 -1 roll  {3 -1 roll dup 4 -2 roll put}forall put definefont} ifelse}bdf/RCJ{4 -1 roll  /ourvec xdf     256 string cvs    (|______) anchorsearch {pop    cvn dup FDFJ exch 1 index eq {_bfh findfont _efh dup maxlength dict CD dup /FontName 3 index put dup /Encoding ourvec put 1 index exch definefont pop }{exch pop} ifelse } {pop}     ifelse}bdf/RFJ{  dup       FontDirectory exch    known      {pop 3 -1 roll pop}   {RCJ}  ifelse}bdf/hasfont{ /resourcestatus where  {pop /Font resourcestatus{ pop pop true}{ false}ifelse } {dup FontDirectory exch known{pop true}{256 stringcvs(fonts/) exch MNstatus{pop pop pop pop true}{false}ifelse}ifelse } ifelse}bdf/FDFJ{ dup    hasfont   not    {   pop/Ryumin-Light-83pv-RKSJ-Hhasfont {/Ryumin-Light-83pv-RKSJ-H}{/Courier}ifelse  } if}bdf/FFJ{ _bfh dup      256 string cvs   (|______)exch MN  cvn      dup      FontDirectory exch known    {     exch pop findfont 3 -1 roll pop  } {     pop FDFJ dup findfont dup maxlength dict CD dup dup /Encoding exch /Encoding get 256 array copy 7 -1 roll { 3 -1 roll dup 4 -2 roll put }forallput definefont  } ifelse _efh}bdf/GS { dup  hasfont  {FFJcurtextmtx makefont setfontexch5 1 rolltspop } {pop popts } ifelse} bdf/RCK{4 -1 roll  /ourvec xdf     256 string cvs    (|______) anchorsearch {pop    cvn dup FDFK exch 1 index eq {_bfh findfont _efh dup maxlength dict CD dup /FontName 3 index put dup /Encoding ourvec put 1 index exch definefont pop }{exch pop} ifelse } {pop}     ifelse}bdf/RFK{  dup       FontDirectory exch    known      {pop 3 -1 roll pop}   {RCK}  ifelse}bdf/hasfont{ /resourcestatus where  {pop /Font resourcestatus{ pop pop true}{ false}ifelse } {dup FontDirectory exch known{pop true}{256 stringcvs(fonts/) exch MNstatus{pop pop pop pop true}{false}ifelse}ifelse } ifelse}bdf/FDFK{ dup    hasfont   not    {   pop/JCsmhasfont {/JCsm}{/Courier}ifelse  } if}bdf/FFK{ _bfh dup      256 string cvs   (|______)exch MN  cvn      dup      FontDirectory exch known    {     exch pop findfont 3 -1 roll pop  } {     pop FDFK dup findfont dup maxlength dict CD dup dup /Encoding exch /Encoding get 256 array copy 7 -1 roll { 3 -1 roll dup 4 -2 roll put }forallput definefont  } ifelse _efh}bdf/RCTC{4 -1 roll  /ourvec xdf     256 string cvs    (|______) anchorsearch {pop    cvn dup FDFTC exch 1 index eq {_bfh findfont _efh dup maxlength dict CD dup /FontName 3 index put dup /Encoding ourvec put 1 index exch definefont pop }{exch pop} ifelse } {pop}     ifelse}bdf/RFTC{  dup       FontDirectory exch    known      {pop 3 -1 roll pop}   {RCTC}  ifelse}bdf/FDFTC{ dup    hasfont   not    {   pop/DFMing-Lt-HK-BFhasfont {/DFMing-Lt-HK-BF}{/Courier}ifelse  } if}bdf/FFTC{ _bfh dup      256 string cvs   (|______)exch MN  cvn      dup      FontDirectory exch known    {     exch pop findfont 3 -1 roll pop  } {     pop FDFTC dup findfont dup maxlength dict CD dup dup /Encoding exch /Encoding get 256 array copy 7 -1 roll { 3 -1 roll dup 4 -2 roll put }forallput definefont  } ifelse _efh}bdf/fps{ currentflat    exch      dup 0 le{pop 1}if  {dup setflat 3 index stopped{1.3 mul dup 3 index gt{pop setflat pop pop stop}if} {exit} ifelse }loop  pop setflat pop pop}bdf/fp{100 currentflat fps}bdf/clipper{clip}bdf /W{/clipper load 100 clipflatness dup setflat fps}bdfuserdict begin /BDFontDict 29 dict def endBDFontDict begin/bu{}def/bn{}def/setTxMode{av 70 ge{pop}if pop}def/gm{m}def/show{pop}def/gr{pop}def/fnt{pop pop pop}def/fs{pop}def/fz{pop}def/lin{pop pop}def/:M {pop pop} def/sf {pop} def/S {pop} def/@b {pop pop pop pop pop pop pop pop} def/_bdsave /save load def/_bdrestore /restore load def/save { dup /fontsave eq {null} {_bdsave} ifelse } def/restore { dup null eq { pop } { _bdrestore } ifelse } def/fontsave null defend/MacVec 256 array def MacVec 0 /Helvetica findfont/Encoding get 0 128 getinterval putintervalMacVec 127 /DEL put MacVec 16#27 /quotesingle put MacVec 16#60 /grave put/NUL/SOH/STX/ETX/EOT/ENQ/ACK/BEL/BS/HT/LF/VT/FF/CR/SO/SI/DLE/DC1/DC2/DC3/DC4/NAK/SYN/ETB/CAN/EM/SUB/ESC/FS/GS/RS/USMacVec 0 32 getinterval astore pop/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls/registered/copyright/trademark/acute/dieresis/notequal/AE/Oslash/infinity/plusminus/lessequal/greaterequal/yen/mu/partialdiff/summation/product/pi/integral/ordfeminine/ordmasculine/Omega/ae/oslash /questiondown/exclamdown/logicalnot/radical/florin/approxequal/Delta/guillemotleft/guillemotright/ellipsis/nbspace/Agrave/Atilde/Otilde/OE/oe/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide/lozenge/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex/Idieresis/Igrave/Oacute/Ocircumflex/apple/Ograve/Uacute/Ucircumflex/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla/hungarumlaut/ogonek/caronMacVec 128 128 getinterval astore pop/findheaderfont { /Helvetica findfont } defend %. AltsysDict%%EndResource%%EndProlog%%BeginSetupAltsysDict begin_bfh _efh end %. AltsysDict%%EndSetupAltsysDict begin /onlyk4{false}ndf/ccmyk{dup 5 -1 roll sub 0 max exch}ndf/cmyk2gray{ 4 -1 roll 0.3 mul 4 -1 roll 0.59 mul 4 -1 roll 0.11 mul add add add 1 min neg 1 add}bdf/setcmykcolor{1 exch sub ccmyk ccmyk ccmyk pop setrgbcolor}ndf/maxcolor {  max max max  } ndf/maxspot { pop} ndf/setcmykcoloroverprint{4{dup -1 eq{pop 0}if 4 1 roll}repeat setcmykcolor}ndf/findcmykcustomcolor{5 packedarray}ndf/setcustomcolor{exch aload pop pop 4{4 index mul 4 1 roll}repeat setcmykcolor pop}ndf/setseparationgray{setgray}ndf/setoverprint{pop}ndf /currentoverprint false ndf/cmykbufs2gray{ 0 1 2 index length 1 sub { 4 index 1 index get 0.3 mul 4 index 2 index get 0.59 mul 4 index 3 index get 0.11 mul 4 index 4 index get add add add cvi 255 min255 exch sub2 index 3 1 roll put }for 4 1 roll pop pop pop}bdf/colorimage{ pop pop [5 -1 roll/exec cvx 6 -1 roll/exec cvx 7 -1 roll/exec cvx 8 -1 roll/exec cvx/cmykbufs2gray cvx ]cvx  image}%. version 47.1 on Linotronic of Postscript defines colorimage incorrectly (rgb model only)version cvr 47.1 le statusdict /product get (Lino) anchorsearch{pop pop true}{pop false}ifelseand{userdict begin bdf end}{ndf}ifelsefhnumcolors 1 ne {/yt save def} if/customcolorimage{ aload pop (_vc_Registration) eq  {pop pop pop pop separationimage } {/ik xdf /iy xdf /im xdf /ic xdfic im iy ik cmyk2gray /xt xdfcurrenttransfer{dup 1.0 exch sub xt mul add}concatprocsst image } ifelse}ndffhnumcolors 1 ne {yt restore} iffhnumcolors 3 ne {/yt save def} if/customcolorimage{ aload pop  (_vc_Registration) eq  {pop pop pop pop separationimage } {/ik xdf /iy xdf /im xdf /ic xdf1.0 dup ic ik add min sub 1.0 dup im ik add min sub 1.0 dup iy ik add min sub /ic xdf /iy xdf /im xdfcurrentcolortransfer4 1 roll {dup 1.0 exch sub ic mul add}concatprocs 4 1 roll {dup 1.0 exch sub iy mul add}concatprocs 4 1 roll {dup 1.0 exch sub im mul add}concatprocs 4 1 roll setcolortransfer{/dummy xdf dummy}concatprocs{dummy}{dummy}true 3 colorimage } ifelse}ndffhnumcolors 3 ne {yt restore} iffhnumcolors 4 ne {/yt save def} if/customcolorimage{ aload pop (_vc_Registration) eq  {pop pop pop pop separationimage } {/ik xdf /iy xdf /im xdf /ic xdfcurrentcolortransfer{1.0 exch sub ik mul ik sub 1 add}concatprocs 4 1 roll{1.0 exch sub iy mul iy sub 1 add}concatprocs 4 1 roll{1.0 exch sub im mul im sub 1 add}concatprocs 4 1 roll{1.0 exch sub ic mul ic sub 1 add}concatprocs 4 1 rollsetcolortransfer{/dummy xdf dummy}concatprocs{dummy}{dummy}{dummy}true 4 colorimage } ifelse}ndffhnumcolors 4 ne {yt restore} if/separationimage{image}ndf/spotascmyk false ndf/newcmykcustomcolor{6 packedarray}ndf/inkoverprint false ndf/setinkoverprint{pop}ndf /setspotcolor {  spots exch get dup 4 get (_vc_Registration) eq {pop 1 exch sub setseparationgray} {0 5 getinterval exch setcustomcolor} ifelse}ndf/currentcolortransfer{currenttransfer dup dup dup}ndf/setcolortransfer{st pop pop pop}ndf/fas{}ndf/sas{}ndf/fhsetspreadsize{pop}ndf/filler{fill}bdf /F{gsave {filler}fp grestore}bdf/f{closepath F}bdf/S{gsave {stroke}fp grestore}bdf/s{closepath S}bdf  userdict /islevel2 systemdict /languagelevel known dup {pop systemdict /languagelevel get 2 ge } if put  islevel2 not {/currentcmykcolor{0 0 0 1 currentgray sub} ndf } if  /tc {gsavesetcmykcolor currentcmykcolorgrestore } bind def /testCMYKColorThrough {tc add add add 0 ne } bind def /fhiscomposite where not {userdict /fhiscompositeislevel2{gsave 1 1 1 1 setcmykcolor currentcmykcolor grestoreadd add add 4 eq}{1 0 0 0 testCMYKColorThrough0 1 0 0 testCMYKColorThrough0 0 1 0 testCMYKColorThrough0 0 0 1 testCMYKColorThroughand and and} ifelseput } { pop } ifelse/bc4 [0 0 0 0] def /_lfp4 { 1 pop  /yt xdf        /xt xdf        /ang xdf       storerect /taperfcn xdf /k2 xdf /y2 xdf /m2 xdf /c2 xdf /k1 xdf /y1 xdf /m1 xdf /c1 xdf c1 c2 sub abs m1 m2 sub abs y1 y2 sub abs k1 k2 sub abs maxcolor       calcgraysteps mul abs round   height abs adjnumsteps    dup 1 lt {pop 1} if     1 sub /numsteps1 xdf currentflat mark     currentflat clipflatness   /delta top bottom sub numsteps1 1 add div def  /right right left sub def   /botsv top delta sub def   {{Wxt yt translate ang rotatext neg yt neg translate dup setflat /bottom botsv def0 1 numsteps1 {numsteps1 dup 0 eq {pop pop 0.5} {div} ifelse taperfcn /frac xdfbc4 0 c2 c1 sub frac mul c1 add putbc4 1 m2 m1 sub frac mul m1 add putbc4 2 y2 y1 sub frac mul y1 add putbc4 3 k2 k1 sub frac mul k1 add putbc4 vc1 index setflat { mark {newpath left bottom right delta rectfill}stopped{cleartomark exch 1.3 mul dup setflat exch 2 copy gt{stop}if}{cleartomark exit}ifelse}loop/bottom bottom delta sub def}for}gsave stopped grestore{exch pop 2 index exch 1.3 mul dup 100 gt{cleartomark setflat stop}if}{exit}ifelse }loop cleartomark setflat}bdf/bcs [0 0] def /_lfs4 { /yt xdf        /xt xdf        /ang xdf       storerect /taperfcn xdf /tint2 xdf       /tint1 xdf       bcs exch 1 exch put     tint1 tint2 sub abs     bcs 1 get maxspot     calcgraysteps mul abs round   height abs adjnumsteps    dup 2 lt {pop 2} if     1 sub /numsteps1 xdf currentflat mark     currentflat clipflatness   /delta top bottom sub numsteps1 1 add div def  /right right left sub def   /botsv top delta sub def   {{Wxt yt translate ang rotatext neg yt neg translate dup setflat /bottom botsv def0 1 numsteps1 {numsteps1 div taperfcn /frac xdfbcs 01.0 tint2 tint1 sub frac mul tint1 add subput bcs vc1 index setflat { mark {newpath left bottom right delta rectfill}stopped{cleartomark exch 1.3 mul dup setflat exch 2 copy gt{stop}if}{cleartomark exit}ifelse}loop/bottom bottom delta sub def}for}gsave stopped grestore{exch pop 2 index exch 1.3 mul dup 100 gt{cleartomark setflat stop}if}{exit}ifelse }loop cleartomark setflat}bdf/_rfs6 { /tint2 xdf       /tint1 xdf       bcs exch 1 exch put     /inrad xdf       /radius xdf       /yt xdf        /xt xdf        tint1 tint2 sub abs     bcs 1 get maxspot     calcgraysteps mul abs round   radius inrad sub abs    adjnumsteps       dup 1 lt {pop 1} if     1 sub /numsteps1 xdf radius inrad sub numsteps1 dup 0 eq {pop} {div} ifelse  2 div /halfstep xdf     currentflat mark     currentflat clipflatness   {{dup setflat W 0 1 numsteps1 {dup /radindex xdfnumsteps1 dup 0 eq {pop pop 0.5} {div} ifelse /frac xdfbcs 0tint2 tint1 sub frac mul tint1 addput bcs vc1 index setflat { newpath mark xt yt radius inrad sub 1 frac sub mul halfstep add inrad add 0 360{ arcradindex numsteps1 ne inrad 0 gt or {xt yt numsteps1 0 eq{ inrad } { radindex 1 add numsteps1 div 1 exch subradius inrad sub mul halfstep add inrad add}ifelsedup xt add yt moveto360 0 arcn } iffill}stopped{cleartomark exch 1.3 mul dup setflat exch 2 copy gt{stop}if}{cleartomark exit}ifelse}loop}for}gsave stopped grestore{exch pop 2 index exch 1.3 mul dup 100 gt{cleartomark setflat stop}if}{exit}ifelse }loop cleartomark setflat}bdf/_rfp6 { 1 pop  /k2 xdf /y2 xdf /m2 xdf /c2 xdf /k1 xdf /y1 xdf /m1 xdf /c1 xdf /inrad xdf       /radius xdf       /yt xdf        /xt xdf        c1 c2 sub abs m1 m2 sub abs y1 y2 sub abs k1 k2 sub abs maxcolor      calcgraysteps mul abs round  radius inrad sub abs   adjnumsteps      dup 1 lt {pop 1} if    1 sub /numsteps1 xdf radius inrad sub numsteps1 dup 0 eq {pop} {div} ifelse  2 div /halfstep xdf    currentflat mark    currentflat clipflatness  {{dup setflat W 0 1 numsteps1 {dup /radindex xdfnumsteps1 dup 0 eq {pop pop 0.5} {div} ifelse /frac xdfbc4 0 c2 c1 sub frac mul c1 add putbc4 1 m2 m1 sub frac mul m1 add putbc4 2 y2 y1 sub frac mul y1 add putbc4 3 k2 k1 sub frac mul k1 add putbc4 vc1 index setflat { newpath mark xt yt radius inrad sub 1 frac sub mul halfstep add inrad add 0 360{ arcradindex numsteps1 ne inrad 0 gt or {xt yt numsteps1 0 eq{ inrad } { radindex 1 add numsteps1 div 1 exch subradius inrad sub mul halfstep add inrad add}ifelsedup xt add yt moveto360 0 arcn } iffill}stopped{cleartomark exch 1.3 mul dup setflat exch 2 copy gt{stop}if}{cleartomark exit}ifelse}loop}for}gsave stopped grestore{exch pop 2 index exch 1.3 mul dup 100 gt{cleartomark setflat stop}if}{exit}ifelse }loop cleartomark setflat}bdf/lfp4{_lfp4}ndf/lfs4{_lfs4}ndf/rfs6{_rfs6}ndf/rfp6{_rfp6}ndf/cvc [0 0 0 1] def /vc{ AltsysDict /cvc 2 index put  aload length dup 4 eq {pop dup -1 eq{pop setrgbcolor}{setcmykcolor}ifelse} {6 eq {sethexcolor} {setspotcolor} ifelse } ifelse}bdf 0 setseparationgray/imgr {1863.43 1871 2132.57 2125 } def /bleed 0 def /clpr {1863.43 1871 2132.57 2125 } def /xs 1 def /ys 1 def /botx 0 def /overlap 0 def /wdist 18 def 0 2 mul fhsetspreadsize 0 0 ne {/df 0 def /clipflatness 0 def} if /maxsteps 256 def /forcemaxsteps false def /minsteps 0 def  userdict begin /AGDOrigMtx matrix currentmatrix def end vms-1863 -1870 translate/currentpacking defed{false setpacking}if /spots[1 0 0 0 (Process Cyan) false newcmykcustomcolor0 1 0 0 (Process Magenta) false newcmykcustomcolor0 0 1 0 (Process Yellow) false newcmykcustomcolor0 0 0 1 (Process Black) false newcmykcustomcolor0 0.35 0.9 0 (PANTONE 137 C) false newcmykcustomcolor]def/cvtr {1 exch sub 3 1 roll} def/vr { [ 3 index 3 index 3 index cvtr cvtr cvtr 0 ] fhiscomposite not {vc pop pop pop}{pop setrgbcolor}ifelse} def/vc {AltsysDict /cvc 2 index put aload length dup 4 eq {pop dup -0.2 ge {setcmykcolor} {pop vr} ifelse} {6 eq {sethexcolor} {setspotcolor} ifelse} ifelse} bdfn[] 0 d3.863708 M1 w0 j0 Jfalse setoverprint0 ifalse eomode[0 0 0 1] vcvms1863.4322 1870.9995 m2132.5689 1870.9995 L2132.5689 2125.0005 L1863.4322 2125.0005 L1863.4322 1870.9995 Ln1987.8262 1891.1431 m2009.0865 1891.1431 L2009.0865 1912.4028 L1987.8262 1912.4028 L1987.8262 1891.1431 L[1 4]  vctrue setoverprintf false setoverprintn1987.8262 2082.4829 m2009.0865 2082.4829 L2009.0865 2103.7427 L1987.8262 2103.7427 L1987.8262 2082.4829 Ltrue setoverprintf false setoverprintntrue eomode1936.4362 1970.3247 m1939.3611 1952.6848 1954.6644 1938.2937 1982.9337 1945.9067 C1988.2481 1947.3384 1992.0391 1946.5278 1994.086 1941.1509 C1996.8946 1933.7661 2003.5455 1932.5415 2009.8326 1933.3208 C2024.2076 1935.102 2032.7388 1932.2075 2041.0123 1922.3247 C2042.8209 1938.6763 2031.1295 1948.2856 2023.7857 1952.8804 C2016.7896 1957.2563 2016.106 1961.8052 2016.0201 1965.3286 C2021.0826 1959.5376 2027.6802 1957.0835 2034.5435 1956.1177 C2046.4107 1954.4477 2054.9107 1951.1382 2059.4107 1944.7759 C2060.4735 1959.3359 2048.2975 1964.7692 2042.3995 1970.326 C1970.2927 1970.3247 L1971.5512 1970.1662 1972.8958 1970.0479 1974.3321 1969.9731 C1967.119 1963.9373 1951.9781 1965.5356 1942.2811 1970.3238 C1936.4362 1970.3247 Lh2047.766 1970.3247 m2050.3518 1969.563 2052.9719 1969.3352 2056.0357 1969.5679 C2057.5181 1969.6802 2059.058 1969.9814 2060.6298 1970.3266 C2047.766 1970.3247 Lh2075.6889 1970.3247 m2077.8179 1969.1672 2079.8503 1967.1886 2081.7154 1963.9927 C2091.1607 1970.1304 2103.5357 1967.9429 2111.8424 1962.5688 C2110.4896 1965.5448 2108.8581 1968.1006 2107.0251 1970.3275 C2075.6889 1970.3247 Ltrue setoverprintf false setoverprintn1942.2811 1970.3247 m1939.7106 1971.593 1937.5227 1973.0864 1935.9664 1974.7212 C1936.0402 1973.2429 1936.1967 1971.7762 1936.4362 1970.3313 C1942.2811 1970.3247 Lh2042.3995 1970.3247 m2041.0143 1971.631 2039.9755 1972.9428 2039.5357 1974.3813 C2042.5322 1972.4252 2045.1313 1971.0978 2047.766 1970.3232 C2060.6299 1970.3247 L2065.6004 1971.418 2070.89 1972.9482 2075.6889 1970.3292 C2107.0251 1970.3247 L2097.7722 1981.5692 2083.3842 1984.433 2073.7857 1990.6929 C2068.2799 1994.2837 2066.0494 2001.4907 2065.1744 2007.5161 C2059.7564 2006.9517 2050.733 2006.8716 2046.4244 2017.8267 C2043.0357 2026.4434 2044.44 2040.7202 2033.0982 2052.8184 C2022.7857 2063.8188 2010.0982 2067.4438 1998.4571 2066.6269 C2012.7232 2057.0874 2007.0982 2042.7065 1996.7384 2042.7065 C1982.3184 2042.7065 1978.2852 2060.0747 1957.1778 2060.0747 C1952.3497 2060.0747 1948.0958 2058.5669 1945.441 2056.8125 C1957.2618 2055.3193 1960.0919 2045.6265 1963.7852 2036.8535 C1966.7227 2029.8813 1971.9727 2025.8184 1979.6602 2023.6934 C1978.2716 2022.8945 1974.9532 2021.9126 1970.6641 2021.9126 C1961.3419 2021.9126 1954.8477 2026.8184 1948.1719 2033.6973 C1942.2965 2039.7495 1935.7437 2045.4853 1924.7554 2045.4853 C1919.3507 2045.4853 1915.212 2043.7734 1913.7789 2042.8086 C1919.8101 2041.8584 1928.7203 2038.2622 1928.7203 2031.8823 C1928.7203 2026.4272 1922.6851 2024.3393 1917.7418 2029.5605 C1912.2369 2035.3745 1904.5089 2039.7705 1895.6656 2039.7705 C1891.2969 2039.7705 1886.9278 2038.3784 1885.0709 2036.5703 C1895.5518 2035.3613 1901.7598 2028.6323 1908.2486 2013.6255 C1911.9107 2005.1538 1917.127 1997.146 1930.2593 1996.9966 C1936.2369 1996.9243 1944.7222 1999.7671 1949.7051 1994.9858 C1954.42 1990.4595 1952.836 1984.5249 1954.9942 1979.7134 C1957.3528 1974.4543 1961.9128 1971.4106 1970.2927 1970.3286 C2042.3995 1970.3247 Lh2009.0865 1986.813 m1987.8262 1986.813 L1987.8262 2008.0727 L2009.0865 2008.0727 L2009.0865 1986.813 Ltrue setoverprintf false setoverprintnvmrvmrend%%Trailer